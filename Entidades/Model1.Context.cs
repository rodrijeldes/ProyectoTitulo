//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HojaDeTareasContexto : DbContext
    {
        public HojaDeTareasContexto()
            : base("name=HojaDeTareasContexto")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActividadRelacionada> ActividadRelacionada { get; set; }
        public virtual DbSet<ActividadUsuario> ActividadUsuario { get; set; }
        public virtual DbSet<AdjuntoActividad> AdjuntoActividad { get; set; }
        public virtual DbSet<AdjuntoProyecto> AdjuntoProyecto { get; set; }
        public virtual DbSet<Adjuntos> Adjuntos { get; set; }
        public virtual DbSet<AvanceActividad> AvanceActividad { get; set; }
        public virtual DbSet<DependenciaDeUsuarios> DependenciaDeUsuarios { get; set; }
        public virtual DbSet<EstadoActividad> EstadoActividad { get; set; }
        public virtual DbSet<EstadoProyecto> EstadoProyecto { get; set; }
        public virtual DbSet<HistoricoCambiosDeEstado> HistoricoCambiosDeEstado { get; set; }
        public virtual DbSet<Proyecto> Proyecto { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<UsuarioProyecto> UsuarioProyecto { get; set; }
        public virtual DbSet<Actividad> Actividad { get; set; }
    
        public virtual ObjectResult<Usp_ListarProyectoPorIdUsaurio_Result> Usp_ListarProyectoPorIdUsaurio(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListarProyectoPorIdUsaurio_Result>("Usp_ListarProyectoPorIdUsaurio", idUsuarioParameter);
        }
    
        public virtual ObjectResult<Usp_ListaUsuarioProyecto_Result> Usp_ListaUsuarioProyecto(Nullable<int> idProyecto)
        {
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("idProyecto", idProyecto) :
                new ObjectParameter("idProyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListaUsuarioProyecto_Result>("Usp_ListaUsuarioProyecto", idProyectoParameter);
        }
    
        public virtual int Usp_AgregarUsuarioProyecto(Nullable<int> idUsuario, Nullable<int> idproyecto, Nullable<bool> asigna, Nullable<bool> cierra, Nullable<bool> participantes)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idproyectoParameter = idproyecto.HasValue ?
                new ObjectParameter("idproyecto", idproyecto) :
                new ObjectParameter("idproyecto", typeof(int));
    
            var asignaParameter = asigna.HasValue ?
                new ObjectParameter("asigna", asigna) :
                new ObjectParameter("asigna", typeof(bool));
    
            var cierraParameter = cierra.HasValue ?
                new ObjectParameter("cierra", cierra) :
                new ObjectParameter("cierra", typeof(bool));
    
            var participantesParameter = participantes.HasValue ?
                new ObjectParameter("participantes", participantes) :
                new ObjectParameter("participantes", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_AgregarUsuarioProyecto", idUsuarioParameter, idproyectoParameter, asignaParameter, cierraParameter, participantesParameter);
        }
    
        public virtual ObjectResult<Usp_ListaActividadesProyectoPorUsuario_Result> Usp_ListaActividadesProyectoPorUsuario(Nullable<int> idUsuario, Nullable<int> idProyecto)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            var idProyectoParameter = idProyecto.HasValue ?
                new ObjectParameter("idProyecto", idProyecto) :
                new ObjectParameter("idProyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListaActividadesProyectoPorUsuario_Result>("Usp_ListaActividadesProyectoPorUsuario", idUsuarioParameter, idProyectoParameter);
        }
    }
}
